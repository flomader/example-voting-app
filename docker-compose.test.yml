version: "2"

services:
  vote:
    image: docker-on.azurecr.io/vote:latest
    build: 
      context: ./vote
      dockerfile: Dockerfile
    depends_on:
      - "redis"
    command: python app.py
    ports:
      - "8000:80"
    environment:
      REDIS_HOST: "redis"
      REDIS_KEY: "redis"
    networks:
      - front-tier
      - back-tier

  result:
    image: docker-on.azurecr.io/result:latest
    build: 
      context: ./result
      dockerfile: Dockerfile
    depends_on:
      - "db"
    command: nodemon --debug server.js
    ports:
      - "8888:80"
      - "5858:5858"
    environment:
      DB_HOST: "db"
      DB_USER: "sa"
      DB_PASSWORD: "P@ssw0rd"
      DB_NAME: "Votes"
    networks:
      - front-tier
      - back-tier

  worker:
    image: docker-on.azurecr.io/worker:latest
    build: 
      context: ./worker
      dockerfile: Dockerfile
    depends_on:
      - "db"
      - "redis"
    environment:
      DB_HOST: "db"
      DB_USER: "sa"
      DB_PASSWORD: "P@ssw0rd"
      DB_NAME: "Votes"
      REDIS_HOST: "redis"
      REDIS_KEY: "redis"
    networks:
      - back-tier

  redis:
    image: redis:alpine:latest
    command: redis-server --requirepass redis
    container_name: redis
    ports: ["6379"]
    networks:
      - back-tier

  db:
    image: microsoft/mssql-server-linux:latest
    container_name: db
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "P@ssw0rd"
      ACCEPT_EULA: "Y"
    networks:
      - back-tier
    volumes:
      - /mssql:/var/opt/mssql

networks:
  front-tier:
  back-tier: